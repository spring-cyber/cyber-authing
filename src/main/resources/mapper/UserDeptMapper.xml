<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.cyber.authing.domain.repository.UserDeptMapper">	<sql id="baseColumns">		 id, user_id, dept_id, status, deleted, creator, create_time, updator, update_time, remark, version	</sql>	<sql id="updateColumns">		<set>			  <if test="id != null">	id   = #{id},  </if>  <if test="userId != null">	user_id   = #{userId},  </if>  <if test="deptId != null">	dept_id   = #{deptId},  </if>  <if test="status != null">	status   = #{status},  </if>  <if test="deleted != null">	deleted   = #{deleted},  </if>  <if test="creator != null">	creator   = #{creator},  </if>  <if test="createTime != null">	create_time   = #{createTime},  </if>  <if test="updator != null">	updator   = #{updator},  </if>  <if test="updateTime != null">	update_time   = #{updateTime},  </if>  <if test="remark != null">	remark   = #{remark},  </if>  <if test="version != null">	version   = #{version},  </if>		</set>	</sql>    <sql id="whereClause">        <trim prefix="WHERE" prefixOverrides="AND">			  <if test="id != null">	    AND ${columnPrefix}id = #{id}  </if>  <if test="userId != null">	    AND ${columnPrefix}user_id = #{userId}  </if>  <if test="deptId != null">	    AND ${columnPrefix}dept_id = #{deptId}  </if>  <if test="status != null">	    AND ${columnPrefix}status = #{status}  </if>  <if test="deleted != null">	    AND ${columnPrefix}deleted = #{deleted}  </if>  <if test="creator != null">	    AND ${columnPrefix}creator = #{creator}  </if>  <if test="createTime != null">	    AND ${columnPrefix}create_time = #{createTime}  </if>  <if test="updator != null">	    AND ${columnPrefix}updator = #{updator}  </if>  <if test="updateTime != null">	    AND ${columnPrefix}update_time = #{updateTime}  </if>  <if test="remark != null">	    AND ${columnPrefix}remark = #{remark}  </if>        </trim>    </sql>	<insert id="save" parameterType="com.cyber.authing.domain.entity.UserDept">		insert into user_dept		(<include refid="saveColumn"/>)		values		(<include refid="saveValue"/>)	</insert>	<insert id="saveBatch" parameterType="com.cyber.authing.domain.entity.UserDept">		insert into user_dept		(<include refid="saveColumn"/>)		values		<foreach collection="list" separator="," item="item">			(<include refid="saveBatchValue"/>)		</foreach>	</insert>	<sql id="saveColumn">		<trim suffixOverrides=",">			<if test="id!= null">id,</if><if test="userId!= null">user_id,</if><if test="deptId!= null">dept_id,</if><if test="status!= null">status,</if><if test="deleted!= null">deleted,</if><if test="creator!= null">creator,</if><if test="createTime!= null">create_time,</if><if test="updator!= null">updator,</if><if test="updateTime!= null">update_time,</if><if test="remark!= null">remark,</if><if test="version!= null">version,</if>		</trim>	</sql>	<sql id="saveValue">		<trim suffixOverrides=",">			<if test="id!= null">#{id},</if><if test="userId!= null">#{userId},</if><if test="deptId!= null">#{deptId},</if><if test="status!= null">#{status},</if><if test="deleted!= null">#{deleted},</if><if test="creator!= null">#{creator},</if><if test="createTime!= null">#{createTime},</if><if test="updator!= null">#{updator},</if><if test="updateTime!= null">#{updateTime},</if><if test="remark!= null">#{remark},</if><if test="version!= null">#{version},</if>		</trim>	</sql>	<sql id="saveBatchValue">		<trim suffixOverrides=",">			<if test="item.id!= null">#{item.id},</if><if test="item.userId!= null">#{item.userId},</if><if test="item.deptId!= null">#{item.deptId},</if><if test="item.status!= null">#{item.status},</if><if test="item.deleted!= null">#{item.deleted},</if><if test="item.creator!= null">#{item.creator},</if><if test="item.createTime!= null">#{item.createTime},</if><if test="item.updator!= null">#{item.updator},</if><if test="item.updateTime!= null">#{item.updateTime},</if><if test="item.remark!= null">#{item.remark},</if><if test="item.version!= null">#{item.version},</if>		</trim>	</sql>	<delete id="deleteById" parameterType="com.cyber.authing.domain.entity.UserDept">		DELETE FROM user_dept WHERE id = #{id}	</delete>	<update id="updateById" parameterType="com.cyber.authing.domain.entity.UserDept">		update user_dept		<include refid="updateColumns" />		, version = version + 1		where id = #{id}		and version = #{version}	</update>	<select id="selectOne" resultType="com.cyber.authing.domain.entity.UserDept" parameterType="com.cyber.authing.domain.entity.UserDept">		SELECT		<include refid="baseColumns" />		FROM user_dept        <include refid="whereClause">            <property name="columnPrefix" value=""/>        </include>	</select>	<select id="selectByIndexCount" parameterType="com.cyber.authing.domain.entity.UserDept" resultType="int">		SELECT count(1)		FROM user_dept        <include refid="whereClause">            <property name="columnPrefix" value=""/>        </include>	</select>	<select id="selectByIndex" parameterType="com.cyber.authing.domain.entity.UserDept" resultType="com.cyber.authing.domain.entity.UserDept">		SELECT		<include refid="baseColumns" />		FROM user_dept        <include refid="whereClause">            <property name="columnPrefix" value=""/>        </include>		<if test="sortBy != null and sortBy != '' and sortType != null and sortType != '' ">			ORDER BY ${sortBy} ${sortType}		</if>		LIMIT #{offset} , #{limit}	</select>    <select id="selectUserDept" resultType="com.cyber.authing.domain.entity.UserDept">		select ud.user_id,d.name,d.order_num		from user_dept ud		left join dept d on d.id = up.dept_id		where up.user_id in		<foreach collection="userIds" separator="," item="userId" open="(" close=")">			#{userId}		</foreach>	</select></mapper>