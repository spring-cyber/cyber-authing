<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.cyber.authing.domain.repository.DeptMapper">	<sql id="baseColumns">		 id, parent_id, enterprise_id, name, code, leader, phone, email, order_num, description, status, deleted, creator, create_time, updator, update_time, remark, version	</sql>	<sql id="updateColumns">		<set>			  <if test="id != null">	id   = #{id},  </if>  <if test="parentId != null">	parent_id   = #{parentId},  </if>  <if test="enterpriseId != null">	enterprise_id   = #{enterpriseId},  </if>  <if test="name != null">	name   = #{name},  </if>  <if test="code != null">	code   = #{code},  </if>  <if test="leader != null">	leader   = #{leader},  </if>  <if test="phone != null">	phone   = #{phone},  </if>  <if test="email != null">	email   = #{email},  </if>  <if test="orderNum != null">	order_num   = #{orderNum},  </if>  <if test="description != null">	description   = #{description},  </if>  <if test="status != null">	status   = #{status},  </if>  <if test="deleted != null">	deleted   = #{deleted},  </if>  <if test="creator != null">	creator   = #{creator},  </if>  <if test="createTime != null">	create_time   = #{createTime},  </if>  <if test="updator != null">	updator   = #{updator},  </if>  <if test="updateTime != null">	update_time   = #{updateTime},  </if>  <if test="remark != null">	remark   = #{remark},  </if>  <if test="version != null">	version   = #{version},  </if>		</set>	</sql>    <sql id="whereClause">        <trim prefix="WHERE" prefixOverrides="AND">			  <if test="id != null">	    AND ${columnPrefix}id = #{id}  </if>  <if test="parentId != null">	    AND ${columnPrefix}parent_id = #{parentId}  </if>  <if test="enterpriseId != null">	    AND ${columnPrefix}enterprise_id = #{enterpriseId}  </if>  <if test="name != null">	    AND ${columnPrefix}name = #{name}  </if>  <if test="code != null">	    AND ${columnPrefix}code = #{code}  </if>  <if test="leader != null">	    AND ${columnPrefix}leader = #{leader}  </if>  <if test="phone != null">	    AND ${columnPrefix}phone = #{phone}  </if>  <if test="email != null">	    AND ${columnPrefix}email = #{email}  </if>  <if test="orderNum != null">	    AND ${columnPrefix}order_num = #{orderNum}  </if>  <if test="description != null">	    AND ${columnPrefix}description = #{description}  </if>  <if test="status != null">	    AND ${columnPrefix}status = #{status}  </if>  <if test="deleted != null">	    AND ${columnPrefix}deleted = #{deleted}  </if>  <if test="creator != null">	    AND ${columnPrefix}creator = #{creator}  </if>  <if test="createTime != null">	    AND ${columnPrefix}create_time = #{createTime}  </if>  <if test="updator != null">	    AND ${columnPrefix}updator = #{updator}  </if>  <if test="updateTime != null">	    AND ${columnPrefix}update_time = #{updateTime}  </if>  <if test="remark != null">	    AND ${columnPrefix}remark = #{remark}  </if>        </trim>    </sql>	<insert id="save" parameterType="com.cyber.authing.domain.entity.Dept">		insert into dept		(<include refid="saveColumn"/>)		values		(<include refid="saveValue"/>)	</insert>	<sql id="saveColumn">		<trim suffixOverrides=",">			<if test="id!= null">id,</if><if test="parentId!= null">parent_id,</if><if test="enterpriseId!= null">enterprise_id,</if><if test="name!= null">name,</if><if test="code!= null">code,</if><if test="leader!= null">leader,</if><if test="phone!= null">phone,</if><if test="email!= null">email,</if><if test="orderNum!= null">order_num,</if><if test="description!= null">description,</if><if test="status!= null">status,</if><if test="deleted!= null">deleted,</if><if test="creator!= null">creator,</if><if test="createTime!= null">create_time,</if><if test="updator!= null">updator,</if><if test="updateTime!= null">update_time,</if><if test="remark!= null">remark,</if><if test="version!= null">version,</if>		</trim>	</sql>	<sql id="saveValue">		<trim suffixOverrides=",">			<if test="id!= null">#{id},</if><if test="parentId!= null">#{parentId},</if><if test="enterpriseId!= null">#{enterpriseId},</if><if test="name!= null">#{name},</if><if test="code!= null">#{code},</if><if test="leader!= null">#{leader},</if><if test="phone!= null">#{phone},</if><if test="email!= null">#{email},</if><if test="orderNum!= null">#{orderNum},</if><if test="description!= null">#{description},</if><if test="status!= null">#{status},</if><if test="deleted!= null">#{deleted},</if><if test="creator!= null">#{creator},</if><if test="createTime!= null">#{createTime},</if><if test="updator!= null">#{updator},</if><if test="updateTime!= null">#{updateTime},</if><if test="remark!= null">#{remark},</if><if test="version!= null">#{version},</if>		</trim>	</sql>	<delete id="deleteById" parameterType="com.cyber.authing.domain.entity.Dept">		DELETE FROM dept WHERE id = #{id}	</delete>	<update id="updateById" parameterType="com.cyber.authing.domain.entity.Dept">		update dept		<include refid="updateColumns" />		, version = version + 1		where id = #{id}		and version = #{version}	</update>	<select id="selectOne" resultType="com.cyber.authing.domain.entity.Dept" parameterType="com.cyber.authing.domain.entity.Dept">		SELECT		<include refid="baseColumns" />		FROM dept        <include refid="whereClause">            <property name="columnPrefix" value=""/>        </include>	</select>	<select id="selectByIndexCount" parameterType="com.cyber.authing.domain.entity.Dept" resultType="int">		SELECT count(1)		FROM dept        <include refid="whereClause">            <property name="columnPrefix" value=""/>        </include>	</select>	<select id="selectByIndex" parameterType="com.cyber.authing.domain.entity.Dept" resultType="com.cyber.authing.domain.entity.Dept">		SELECT		<include refid="baseColumns" />,		(select e.name from enterprise e where e.id = d.enterprise_id) as enterpriseName,		(select d2.name from dept d2 where d2.id = d.parent_id) as parentDeptName		FROM dept d        <include refid="whereClause">            <property name="columnPrefix" value=""/>        </include>		<if test="sortBy != null and sortBy != '' and sortType != null and sortType != '' ">			ORDER BY ${sortBy} ${sortType}		</if>		LIMIT #{offset} , #{limit}	</select>	<select id="selectList" resultType="com.cyber.authing.domain.entity.Dept">        SELECT        <include refid="baseColumns"/>        FROM dept d        <include refid="whereClause">            <property name="columnPrefix" value=""/>        </include>		<if test="excludeId != null">			AND (parent_id != #{excludeId} and id != #{excludeId})		</if>    </select>	<select id="countStatus" resultType="com.cyber.authing.domain.response.CountStatus">		select count(status) 'count',status from dept group by status	</select></mapper>