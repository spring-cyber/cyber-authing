<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.cyber.authing.domain.repository.UserMapper">	<sql id="baseColumns">		 id, enterprise_id, name, sex, type, email, phone, avatar, status, deleted, creator, create_time, updator, update_time, remark, version	</sql>	<sql id="updateColumns">		<set>			  <if test="id != null">	id   = #{id},  </if>  <if test="enterpriseId != null">	enterprise_id   = #{enterpriseId},  </if>  <if test="name != null">	name   = #{name},  </if>  <if test="sex != null">	sex   = #{sex},  </if>  <if test="type != null">	type   = #{type},  </if>  <if test="email != null">	email   = #{email},  </if>  <if test="phone != null">	phone   = #{phone},  </if>  <if test="avatar != null">	avatar   = #{avatar},  </if>  <if test="status != null">	status   = #{status},  </if>  <if test="deleted != null">	deleted   = #{deleted},  </if>  <if test="creator != null">	creator   = #{creator},  </if>  <if test="createTime != null">	create_time   = #{createTime},  </if>  <if test="updator != null">	updator   = #{updator},  </if>  <if test="updateTime != null">	update_time   = #{updateTime},  </if>  <if test="remark != null">	remark   = #{remark},  </if>  <if test="version != null">	version   = #{version},  </if>		</set>	</sql>    <sql id="whereClause">        <trim prefix="WHERE" prefixOverrides="AND">			  <if test="id != null">	    AND ${columnPrefix}id = #{id}  </if>  <if test="enterpriseId != null and deptIds==null">	    AND ${columnPrefix}enterprise_id = #{enterpriseId}  </if>  <if test="positionId != null">	    AND exists(select 1 from user_position up where u.id = up.user_id and up.position_id = #{positionId})  </if>  <if test="enterpriseId != null and deptIds!=null and  deptIds.size()!=0">	    AND (${columnPrefix}enterprise_id = #{enterpriseId} and !exists(select 1 from user_dept ud where u.id = ud.user_id))  </if>  <if test="enterpriseId == null and deptIds!=null and deptIds.size()!=0">	    AND id in (select ud.user_id from user_dept ud where ud.dept_id	  <foreach collection="deptIds" separator="," item="item" open=" in (" close=")">	  		#{item}	  </foreach>	    )  </if>  <if test="name != null and phone != null">	    AND ({columnPrefix}name like #{name} AND ${columnPrefix}phone like #{phone})  </if>  <if test="sex != null">	    AND ${columnPrefix}sex = #{sex}  </if>  <if test="type != null">	    AND ${columnPrefix}type = #{type}  </if>  <if test="email != null">	    AND ${columnPrefix}email = #{email}  </if><!--  <if test="phone != null">--><!--	    AND ${columnPrefix}phone = #{phone}--><!--  </if>-->  <if test="avatar != null">	    AND ${columnPrefix}avatar = #{avatar}  </if>  <if test="status != null">	    AND ${columnPrefix}status = #{status}  </if>  <if test="deleted != null">	    AND ${columnPrefix}deleted = #{deleted}  </if>  <if test="creator != null">	    AND ${columnPrefix}creator = #{creator}  </if>  <if test="createTime != null">	    AND ${columnPrefix}create_time = #{createTime}  </if>  <if test="updator != null">	    AND ${columnPrefix}updator = #{updator}  </if>  <if test="updateTime != null">	    AND ${columnPrefix}update_time = #{updateTime}  </if>  <if test="remark != null">	    AND ${columnPrefix}remark = #{remark}  </if>        </trim>    </sql>	<insert id="save" parameterType="com.cyber.authing.domain.entity.User">		insert into user		(<include refid="saveColumn"/>)		values		(<include refid="saveValue"/>)	</insert>	<insert id="saveBatch" parameterType="com.cyber.authing.domain.entity.User">		insert into user		(<include refid="saveColumn"/>)		values		<foreach collection="list" separator="," item="item">			(<include refid="saveBatchValue"/>)		</foreach>	</insert>	<sql id="saveColumn">		<trim suffixOverrides=",">			<if test="id!= null">id,</if><if test="enterpriseId!= null">enterprise_id,</if><if test="name!= null">name,</if><if test="sex!= null">sex,</if><if test="type!= null">type,</if><if test="email!= null">email,</if><if test="phone!= null">phone,</if><if test="avatar!= null">avatar,</if><if test="status!= null">status,</if><if test="deleted!= null">deleted,</if><if test="creator!= null">creator,</if><if test="createTime!= null">create_time,</if><if test="updator!= null">updator,</if><if test="updateTime!= null">update_time,</if><if test="remark!= null">remark,</if><if test="version!= null">version,</if>		</trim>	</sql>	<sql id="saveValue">		<trim suffixOverrides=",">			<if test="id!= null">#{id},</if><if test="enterpriseId!= null">#{enterpriseId},</if><if test="name!= null">#{name},</if><if test="sex!= null">#{sex},</if><if test="type!= null">#{type},</if><if test="email!= null">#{email},</if><if test="phone!= null">#{phone},</if><if test="avatar!= null">#{avatar},</if><if test="status!= null">#{status},</if><if test="deleted!= null">#{deleted},</if><if test="creator!= null">#{creator},</if><if test="createTime!= null">#{createTime},</if><if test="updator!= null">#{updator},</if><if test="updateTime!= null">#{updateTime},</if><if test="remark!= null">#{remark},</if><if test="version!= null">#{version},</if>		</trim>	</sql><sql id="saveBatchValue">		<trim suffixOverrides=",">			<if test="item.id!= null">#{item.id},</if><if test="item.enterpriseId!= null">#{item.enterpriseId},</if><if test="item.name!= null">#{item.name},</if><if test="item.sex!= null">#{item.sex},</if><if test="item.type!= null">#{item.type},</if><if test="item.email!= null">#{item.email},</if><if test="item.phone!= null">#{item.phone},</if><if test="item.avatar!= null">#{item.avatar},</if><if test="item.status!= null">#{item.status},</if><if test="item.deleted!= null">#{item.deleted},</if><if test="item.creator!= null">#{item.creator},</if><if test="item.createTime!= null">#{item.createTime},</if><if test="item.updator!= null">#{item.updator},</if><if test="item.updateTime!= null">#{item.updateTime},</if><if test="item.remark!= null">#{item.remark},</if><if test="item.version!= null">#{item.version},</if>		</trim>	</sql>	<delete id="deleteById" parameterType="com.cyber.authing.domain.entity.User">		DELETE FROM user WHERE id = #{id}	</delete>	<update id="updateById" parameterType="com.cyber.authing.domain.entity.User">		update user		<include refid="updateColumns" />		, version = version + 1		where id = #{id}		and version = #{version}	</update>	<select id="selectOne" resultType="com.cyber.authing.domain.entity.User" parameterType="com.cyber.authing.domain.entity.User">		SELECT		<include refid="baseColumns" />		FROM user        <include refid="whereClause">            <property name="columnPrefix" value=""/>        </include>	</select>	<select id="selectByIndexCount" parameterType="com.cyber.authing.domain.entity.User" resultType="int">		SELECT count(1)		FROM user u        <include refid="whereClause">            <property name="columnPrefix" value=""/>        </include>	</select>	<select id="selectByIndex" parameterType="com.cyber.authing.domain.entity.User" resultType="com.cyber.authing.domain.entity.User">		SELECT		<include refid="baseColumns" />,		(select e.name from enterprise e where e.id = u.enterprise_id) as enterpriseName		FROM user u        <include refid="whereClause">            <property name="columnPrefix" value=""/>        </include>		<if test="sortBy != null and sortBy != '' and sortType != null and sortType != '' ">			ORDER BY ${sortBy} ${sortType}		</if>		LIMIT #{offset} , #{limit}	</select>	<select id="selectList" resultType="com.cyber.authing.domain.entity.User">		SELECT		<include refid="baseColumns" />		FROM user		<include refid="whereClause">			<property name="columnPrefix" value=""/>		</include>	</select>	<select id="countStatus" resultType="com.cyber.authing.domain.response.CountStatus">		select count(status) 'count',status from user group by status	</select></mapper>